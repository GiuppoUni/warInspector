<<<<<<< Updated upstream
from sklearn.decomposition import PCA
import pandas as pd
=======

"""
=========================
Multi-dimensional scaling
=========================
"""
print(__doc__)

>>>>>>> Stashed changes

from sklearn.decomposition import PCA
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import manifold
from sklearn.preprocessing import StandardScaler


<<<<<<< Updated upstream

""" Make avg of year intervals if present e.g 2000-2010 => 2005 """
=======
# Make avg of year intervals if present e.g 2000-2010 => 2005 
>>>>>>> Stashed changes
def averize(str_interval):
    if("-" in str(str_interval)):
        splitted=str_interval.split("-")
        return int( int(splitted[0])+int(splitted[1])/2 )
    return str_interval

<<<<<<< Updated upstream
#def main():
# load dataset into Pandas DataFrame
df = pd.read_csv("../data/merged.csv")


from sklearn.preprocessing import StandardScaler

print(df.columns)
print(df.dtypes)
# features = ['Supplier', 'Recipient', 'Ordered', 'Weapon model',
#     'Weapon category', 'Ordered year', 'Delivered year',
#     'Delivered num.', 'Comments', 'latS', 'longS', 'codeS', 'latR', 'longR',
#     'codeR']

df['Ordered'] = df['Ordered'].str.replace('(','')
df['Ordered'] = df['Ordered'].str.replace(')','')
df['Ordered'] = pd.to_numeric(df['Ordered'])

df['Ordered year'] = df['Ordered year'].str.replace('(','')
df['Ordered year'] = df['Ordered year'].str.replace(')','')
df['Ordered year'] = pd.to_numeric(df['Ordered year'])


df['Delivered num.'] = df['Delivered num.'].str.replace('(','')
df['Delivered num.'] = df['Delivered num.'].str.replace(')','')
df['Delivered num.'] = pd.to_numeric(df['Delivered num.'])

# df = df.drops("Delivered year")
df["Delivered year"] =  df["Delivered year"].apply( averize )
=======
def prepare_csv():
>>>>>>> Stashed changes

    df = pd.read_csv("../data/merged.csv")
    df = df.iloc[0:20]

<<<<<<< Updated upstream
dfg=df.groupby(["Supplier","Recipient"])[["Delivered num."]].sum().astype(int)

print(dfg,type(dfg))
dfg = dfg.reset_index()
=======
    print("Columns", df.columns)
>>>>>>> Stashed changes


# # Separating out the features
x = dfg.loc[:, features].values
# # Separating out the target
y = dfg.loc[:,['Supplier','Recipient']].values

<<<<<<< Updated upstream


# # Standardizing the features

x = StandardScaler().fit_transform(x)
=======
    df['Delivered num.'] = df['Delivered num.'].str.replace('(','')
    df['Delivered num.'] = df['Delivered num.'].str.replace(')','')

    print(df)
    print( df.groupby(["Supplier","Recipient"])['Ordered'].agg('sum').unstack(fill_value=0) )

def my_mds_plot():
    

    # TODO data=
    """
    dissM=data.values[:,1:] #the first column contains the city names
    cities=data.values[:,0]


    #amax = np.amax(dissM)
    #dissM /= amax          #you can uncomment  these lines to plot MDS in a normalized 2D
    import inspect

            xy = (x, y), xytext = (-20, 20),
            textcoords = 'offset points', ha = 'right', va = 'bottom',
            bbox = dict(boxstyle = 'round,pad=0.3', fc = 'yellow', alpha = 0.1),
            arrowprops = dict(arrowstyle = '->', connectionstyle = 'arc3,rad=0'))

    plt.show()
    print(stress)
"""



def main():
    prepare_csv()
    my_mds_plot()
    # load dataset into Pandas DataFrame

    # # Separating out the target
   # y = df.loc[:,['Weapon description']].values
    # # Standardizing the features
   # x = StandardScaler().fit_transform(x)
>>>>>>> Stashed changes


pca = PCA(n_components=2)
principalComponents = pca.fit_transform(x)
principalDf = pd.DataFrame(data = principalComponents
             , columns = ['principal component 1', 'principal component 2'])

main()


<<<<<<< Updated upstream
#main()
=======
>>>>>>> Stashed changes
